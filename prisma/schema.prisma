generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tbl_approval {
  approval_id   Int          @id @default(autoincrement())
  project_id    Int?
  approval_type String?      @db.VarChar(100)
  approval_date DateTime?    @db.Date
  notes         String?
  tbl_project   tbl_project? @relation(fields: [project_id], references: [project_id], onDelete: Cascade, onUpdate: NoAction)
}

model tbl_assumptionrule {
  rule_id       Int     @id @default(autoincrement())
  rule_category String? @db.VarChar(50)
  rule_key      String? @db.VarChar(100)
  rule_value    String?
}

model tbl_budget {
  budget_id          Int           @id @default(autoincrement())
  devphase_id        Int?
  budget_category    String
  budget_subcategory String?
  amount             Decimal?      @db.Decimal
  tbl_devphase       tbl_devphase? @relation(fields: [devphase_id], references: [devphase_id], onDelete: Restrict, onUpdate: Restrict)
}

model tbl_capitalization {
  capitalization_id Int          @id @default(autoincrement())
  project_id        Int?
  capital_source    String
  amount            Decimal?     @db.Decimal
  notes             String?
  tbl_project       tbl_project? @relation(fields: [project_id], references: [project_id], onDelete: Cascade, onUpdate: Restrict)
}

model tbl_devphase {
  devphase_id   Int           @id @default(autoincrement())
  planarea_id   Int
  devphase_name String        @db.VarChar(255)
  phase_no      Int?
  tbl_budget    tbl_budget[]
  tbl_planarea  tbl_planarea  @relation(fields: [planarea_id], references: [planarea_id], onUpdate: Restrict)
  tbl_parcels   tbl_parcels[]
}

model tbl_landuse {
  landuse_id   Int           @id @default(autoincrement())
  landuse_code String        @unique @db.VarChar(10)
  landuse_type String?       @db.VarChar(50)
  tbl_parcels  tbl_parcels[]
}

model tbl_parcels {
  parcel_id       Int              @id @default(autoincrement())
  parcel_name     String?          @db.VarChar(255)
  planarea_id     Int
  devphase_id     Int
  landuse_code    String?          @db.VarChar(10)
  landuse_type    String?          @db.VarChar(50)
  acres_gross     Float?
  lot_width       Float?
  lot_depth       Float?
  lot_product     String?          @db.VarChar(50)
  lot_area        Float?
  units_total     Int?
  lots_frontfeet  Float?
  planning_loss   Float?
  plan_efficiency Float?
  saledate        DateTime?        @db.Date
  saleprice       Float?
  producttype_id  Int?
  tbl_devphase    tbl_devphase     @relation(fields: [devphase_id], references: [devphase_id], onUpdate: Restrict)
  tbl_landuse     tbl_landuse?     @relation(fields: [landuse_code], references: [landuse_code], onUpdate: Restrict)
  tbl_planarea    tbl_planarea     @relation(fields: [planarea_id], references: [planarea_id], onUpdate: Restrict)
  tbl_producttype tbl_producttype? @relation(fields: [producttype_id], references: [producttype_id], onUpdate: Restrict)
}

model tbl_planarea {
  planarea_id   Int            @id @default(autoincrement())
  project_id    Int
  planarea_name String         @db.VarChar(255)
  tbl_devphase  tbl_devphase[]
  tbl_parcels   tbl_parcels[]
  tbl_project   tbl_project    @relation(fields: [project_id], references: [project_id], onUpdate: Restrict)
}

model tbl_producttype {
  producttype_id    Int           @id @default(autoincrement())
  producttype_name  String        @unique @db.VarChar(50)
  typical_lot_width Float?
  typical_lot_depth Float?
  units_per_acre    Float?
  tbl_parcels       tbl_parcels[]
}

model tbl_project {
  project_id         Int                  @id @default(autoincrement())
  project_name       String               @unique @db.VarChar(255)
  acres_gross        Float?
  location_lat       Float?
  location_lon       Float?
  start_date         DateTime?            @db.Date
  tbl_approval       tbl_approval[]
  tbl_capitalization tbl_capitalization[]
  tbl_planarea       tbl_planarea[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model tmp_search_results {
  table_name  String?
  column_name String?
  value       String?

  @@ignore
}
